using System;
namespace tests
{
 class MainClass
 {
 public static void Main(string[] args)
 {
 int a = 1, b = 0, n = 5;
 while (a <= n)
 b += a++;
 Console.WriteLine(a + " , " + b);
 }
 }
}


a =1 => b=1
a =2 => b=3
a =3 => b=6
a =4 => b=10
a =5 => b=15
(5,15) ==> ( le a prend la valeur du suivant avant de terminer la fonction [6,15] )


using System;
namespace tests
{
 class MainClass
 {
 public static void Main(string[] args)
 {
 int a = 0, b = 0, c = 0, d = 3, m = 3, n = 4;
 for (a = 0; a < m; a++)
 {
 d = 0;
 for (b = 0; b < n; b++)
 d += b;
 c += d;
 }
 Console.WriteLine(a + " , " + b + " , " + c + " , " + d + " . ");
 }
 }
}

a = 2
b = 3
c =  3+6 = 9
d = (1+2) = 3 ; (3+3) = 6
2,3,9,6. ==> ( Non a et prenne la valeur de m et n respectivement avant que la fonction ne finissent , du coup c refait une derni√®re fois la boucle donc = 18 )
[3,4,18,6.]




 class MainClass
 {
 public static void Main(string[] args)
 {
 int a, b, c, d;
 a = 1; b = 2;
 c = a / b;
 d = (a == b) ? 3 : 4;
 Console.WriteLine(c + " , " + d + " . ");
 a = ++b;
 b %= 3;
 Console.WriteLine(a + " , " + b + " . ");
 b = 1;
 for (a = 0; a <= 10; a++)
 c = ++b;
 Console.WriteLine(a + " , " + b + " , " + c + " , " + d + " . ");
 }
 }

premier : 0 , 4. ==> ( Oui )
deuxieme : 3,1 ==> ( Non  si il reste 3 b = 0 et reste 3 ) => [3,0.]
troisieme : 11,1,7,4. => ( Non pour beaucoup de raison sauf le d) [11,12,12,4.]

